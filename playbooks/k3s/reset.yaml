---
- name: Uninstall k3s servers
  hosts: master
  tasks:
  - name: Check if script for uninstalling k3s server is present
    stat: 
      path: /usr/local/bin/k3s-uninstall.sh
    register: k3s_present

  - name: Uninstall k3s from server
    shell: /usr/local/bin/k3s-uninstall.sh
    when: k3s_present.stat.exists

- name: Setup k3s servers
  hosts: master
  tasks:
  - name: Check if k3s is already installed
    ansible.builtin.stat:
      path: /usr/local/bin/k3s
    register: k3s

  - name: Install k3s on server
    become: yes    
    shell: curl -sfL https://get.k3s.io | sh -
    environment:
      K3S_NODE_NAME: "{{ inventory_hostname }}"
      INSTALL_K3S_EXEC: "--disable servicelb --disable traefik"
    when: not k3s.stat.exists

- name: Setup k3s workers
  hosts: workers
  tasks:
  - name: Check if k3s is already installed
    ansible.builtin.stat:
      path: /usr/local/bin/k3s
    register: k3s

  - name: Get master token
    hosts: master
    become: true
    shell: sudo cat /var/lib/rancher/k3s/server/node-token
    register: token

  - name: Install k3s on server
    become: yes    
    shell: curl -sfL https://get.k3s.io | K3S_URL=https://${RPI_MASTER_ONE}:6443 K3S_TOKEN={{ token}} sh -
    environment:
      K3S_NODE_NAME: "{{ inventory_hostname }}"
      INSTALL_K3S_EXEC: "--disable servicelb --disable traefik"
    when: not k3s.stat.exists

- name: Setup kubectl on control node with new context
  hosts: localhost
  tasks:
  - name: Create $HOME/.kube directory if not present
    ansible.builtin.file:
      path: $HOME/.kube
      state: directory
  
  - name: cluster | kubeconfig | update kubeconfig with the right IPv4 address
    delegate_to: localhost
    become: false
    run_once: true
    ansible.builtin.replace:
      path: "/tmp/kubeconfig"
      regexp: "https://127.0.0.1:6443"
      replace: "https://{{ inventory_hostname }}:6443"

  - name: Copy k3s kube config to $HOME/.kube directory
    ansible.builtin.copy:
      src: .kube/config
      dest: $HOME/.kube
      mode: '600'
